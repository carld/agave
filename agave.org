* Quick start

** Setup

:$ cd ~/scheme # Where '~/scheme' is the path to your Scheme libraries
:$ bzr branch lp:~scheme-libraries-team/scheme-libraries/srfi
:$ bzr branch lp:~derick-eddington/scheme-libraries/xitomatl
:$ git clone git://github.com/dharmatech/dharmalab.git
:$ git clone git://github.com/dharmatech/agave.git

** Run a demo in Ypsilon

:$ ypsilon ~/scheme/agave/demos/flexi-line.scm

** Run a demo in Ikarus

:$ ikarus --r6rs-script ~/scheme/agave/demos/flexi-line.scm

** Make a demo load faster in Ikarus

:$ ikarus --compile-dependencies ~/scheme/agave/demos/flexi-line.scm

* Introduction

Agave started out as a collection of OpenGL demos written for R6RS
Scheme. Eventually it grew to include libraries which support basic
OpenGL programming idioms.

All of the demos run in Ikarus and Ypsilon.

* Libraries

Some of the libraries are:

| library                           | notes |
|-----------------------------------+-------|
| [[file:glamour/window.sls][(agave glamour window)]]            |       |
| [[file:glamour/mouse.sls][(agave glamour mouse)]]             |       |
| [[file:glamour/misc.sls][(agave glamour misc)]]              |       |
| [[file:glamour/frames-per-second.sls][(agave glamour frames-per-second)]] |       |
| [[file:color/rgba.sls][(agave color rgba)]]                |       |
| [[file:color/hsva.sls][(agave color hsva)]]                |       |
| [[file:color/conversion.sls][(agave color conversion)]]          |       |
| [[file:geometry/pt.sls][(agave geometry pt)]]               |       |
| [[file:geometry/pt-3d.sls][(agave geometry pt-3d)]]            |       |

The rest of the libraries are mostly support for the demos.

* Demos

A couple of demo highlights. [[file:demos][Browse]] the rest.

** springies

Long before [[http://sodaplay.com][Sodaplay]] existed, [[http://www.cs.rutgers.edu/~decarlo/][Doug DeCarlo]] wrote [[http://www.cs.rutgers.edu/~decarlo/software.html][xspringies]]. Springies
is an implementation of the engine in xspringies. Note that this is
not a binding to any C library; this is an honest to goodness mass and
spring simulation written in pure Scheme. To me, this is a
demonstration that Scheme can be a high-performance language.

[[http://dharmatech.github.com/images/springies-belt-tire.png][Screenshot]]

** cfdg

An implementation of the [[http://www.contextfreeart.org][Context Free Art]] semantics. It also renders
the models. :-) Only a subset of the full ContextFree language is
supported, but I picked a subset which allows for some nice pieces to
be rendered.

[[http://dharmatech.github.com/images/cfdg-game1-turn6.png][Screenshot]]

** flexi-line

A port of a [[http://www.openprocessing.org/visuals/?visualID=323][demo]] I found on [[http://www.openprocessing.org][Open Processing]].

** empathy

A port of a [[http://www.openprocessing.org/visuals/?visualID=1182][demo]] by [[http://www.openprocessing.org/portal/?userID=838][Kyle McDonald]] I found on [[http://www.openprocessing.org][Open Processing]].

** ca

Simulator for the [[http://www.mirekw.com/ca/rullex_gene.html][generations]] family of cellular automata.
